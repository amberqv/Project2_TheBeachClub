/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package TheBeachClub;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sarak
 */
public class RoomUI extends javax.swing.JPanel {

    /**
     * Creates new form RoomUI
     */
    public RoomUI() {
        initComponents();
        
        populateRoomTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        RoomTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        RoomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Room ID", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(RoomTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(203, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(127, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
    }// </editor-fold>//GEN-END:initComponents


     private void populateRoomTable() {
    DefaultTableModel model = (DefaultTableModel) RoomTable.getModel();
    model.setRowCount(0); // Clear existing rows
    
    try {
    // Establish database connection
    Connection connection = DBConnection.getConnection();
    Statement statement = connection.createStatement();
    ResultSet resultSet = statement.executeQuery("SELECT ROOM_ID, ROOM_CAPACITY, ROOM_TYPE, ROOM_PRICE FROM ROOM");
    
    while (resultSet.next()) {
        int roomid = resultSet.getInt("ROOM_ID");
        int roomcapacity = resultSet.getInt("ROOM_CAPACITY");
        String roomtype = resultSet.getString("ROOM_TYPE");
        double roomprice = resultSet.getDouble("ROOM_PRICE");
        
        // Assuming 'model' is a DefaultTableModel instance
        model.addRow(new Object[]{roomid, roomcapacity, roomtype, roomprice});
    }
    
    // Close resources
    resultSet.close();
    statement.close();
    connection.close();
} catch (SQLException e) {
    e.printStackTrace();
}
     }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable RoomTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
